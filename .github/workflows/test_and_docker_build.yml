# Reusable workflow which runs unit tests in a base image then builds
# a geo-spaas image on top of it
---
name: "Run unit tests and build docker image"
on:
  workflow_call:
    inputs:
      base_image:
        required: true
        type: string
      target_image_tags:
        required: true
        type: string
      push_coverage:
        default: false
        type: boolean
      metanorm_version:
        required: true
        type: string
      geospaas_db_host:
        default: 'db'
        type: string
      geospaas_db_user:
        default: 'test'
        type: string
      test_image_name:
        default: 'harvesting_tests'
        type: string
    secrets:
      DOCKER_USER:
        required: true
      DOCKER_PASS:
        required: true
      GEOSPAAS_DB_PASSWORD:
        required: true
jobs:
  tests:
    runs-on: 'ubuntu-latest'
    env:
      GEOSPAAS_DB_HOST: "${{ inputs.geospaas_db_host }}"
      GEOSPAAS_DB_USER: "${{ inputs.geospaas_db_user }}"
      GEOSPAAS_DB_PASSWORD: "${{ secrets.GEOSPAAS_DB_PASSWORD }}"
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: 'Create test docker network'
        run: docker network create testing

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-testing-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-testing-

      - name: Build testing image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          target: base
          build-args: |
            BASE_IMAGE=${{ inputs.base_image }}
            METANORM_VERSION=${{ inputs.metanorm_version }}
          push: false
          load: true
          tags: "${{ inputs.test_image_name }}"
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: 'Start testing database'
        run: /bin/bash ./scripts/start_test_database.sh

      - name: 'Run tests'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
             docker run --rm
             --network testing
             -v "$(pwd):/src"
             -e "GITHUB_ACTIONS=$GITHUB_ACTIONS"
             -e "GITHUB_REF=$GITHUB_REF"
             -e "GITHUB_SHA=$GITHUB_SHA"
             -e "GITHUB_HEAD_REF=$GITHUB_HEAD_REF"
             -e "GITHUB_REPOSITORY=$GITHUB_REPOSITORY"
             -e "GITHUB_RUN_ID=$GITHUB_RUN_ID"
             -e "GITHUB_TOKEN=$GITHUB_TOKEN"
             -e "GEOSPAAS_DB_HOST=${GEOSPAAS_DB_HOST}"
             -e "GEOSPAAS_DB_USER=${GEOSPAAS_DB_USER}"
             -e "GEOSPAAS_DB_PASSWORD=${GEOSPAAS_DB_PASSWORD}"
             "${{ inputs.test_image_name }}"
             bash -c "coverage run ./runtests.py && coverage combine"

      - name: 'Stop testing database'
        run: docker stop "${{ inputs.geospaas_db_host }}"

      - name: 'Install Python 3.11'
        if: ${{ inputs.push_coverage }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 'Upload coverage to coveralls.io'
        if: ${{ inputs.push_coverage }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pip install coveralls && coveralls --service=github

  build_docker_image:
    runs-on: 'ubuntu-20.04'
    needs: 'tests'
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-building-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-building-
            ${{ runner.os }}-buildx-testing-

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            BASE_IMAGE=${{ inputs.base_image }}
            METANORM_VERSION=${{ inputs.metanorm_version }}
            GEOSPAAS_HARVESTING_RELEASE=${{ github.ref_type == 'tag' && github.ref_name || '0.0.0' }}
          push: ${{ github.event_name == 'release' }}
          tags: ${{ inputs.target_image_tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
...